{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"filterZero\",\n            value: function filterZero(row) {\n                return row.filter(function(num) {\n                    return num !== 0;\n                });\n            }\n        },\n        {\n            key: \"renderBoard\",\n            value: function renderBoard() {\n                var cells = document.querySelectorAll(\".game-field td\");\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var index = row * 4 + col;\n                    var cell = cells[index];\n                    var value = this.board[row][col];\n                    cell.classList = \"field-cell\";\n                    if (value === 0) cell.textContent = \"\";\n                    else {\n                        cell.textContent = value;\n                        cell.classList.add(\"field-cell--\".concat(value));\n                    }\n                }\n                var scoreNumber = document.querySelector(\".game-score\");\n                scoreNumber.textContent = \"\".concat(this.score);\n            }\n        },\n        {\n            key: \"spawnNumber\",\n            value: function spawnNumber() {\n                var emptyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length === 0) return;\n                var randCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n                var numberToSpawn = Math.random() < 0.1 ? 4 : 2;\n                this.board[randCell.row][randCell.col] = numberToSpawn;\n                this.renderBoard();\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.board[row][col] === 2048) return \"win\";\n                }\n                for(var row1 = 0; row1 < 4; row1++)for(var col1 = 0; col1 < 4; col1++){\n                    if (this.board[row1][col1] === 0) return \"playing\";\n                    if (col1 < 3 && this.board[row1][col1] === this.board[row1][col1 + 1]) return \"playing\";\n                    if (row1 < 3 && this.board[row1][col1] === this.board[row1 + 1][col1]) return \"playing\";\n                }\n                return \"lose\";\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                for(var i = 0; i < 4; i++){\n                    var row = this.board[i];\n                    row = this.filterZero(row);\n                    for(var j = 0; j < row.length - 1; j++)if (row[j] === row[j + 1]) {\n                        row[j] *= 2;\n                        row[j + 1] = 0;\n                        this.score += row[j];\n                    }\n                    row = this.filterZero(row);\n                    while(row.length < 4)row.push(0);\n                    this.board[i] = row;\n                }\n                this.renderBoard();\n                this.spawnNumber();\n                this.checkGameStatus();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                for(var i = 0; i < 4; i++){\n                    var row = this.board[i].reverse();\n                    row = this.filterZero(row);\n                    for(var j = 0; j < row.length - 1; j++)if (row[j] === row[j + 1]) {\n                        row[j] *= 2;\n                        row[j + 1] = 0;\n                        this.score += row[j];\n                    }\n                    row = this.filterZero(row);\n                    while(row.length < 4)row.push(0);\n                    this.board[i] = row.reverse();\n                }\n                this.renderBoard();\n                this.spawnNumber();\n                this.checkGameStatus();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    for(var row = 0; row < 4; row++)column.push(this.board[row][col]);\n                    column = this.filterZero(column);\n                    for(var i = 0; i < column.length - 1; i++)if (column[i] === column[i + 1]) {\n                        column[i] *= 2;\n                        column[i + 1] = 0;\n                        this.score += column[i];\n                    }\n                    column = this.filterZero(column);\n                    while(column.length < 4)column.push(0);\n                    for(var row1 = 0; row1 < 4; row1++)this.board[row1][col] = column[row1];\n                }\n                this.renderBoard();\n                this.spawnNumber();\n                this.checkGameStatus();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                for(var col = 0; col < 4; col++){\n                    var column = [];\n                    for(var row = 0; row < 4; row++)column.push(this.board[row][col]);\n                    column = this.filterZero(column);\n                    column.reverse();\n                    for(var i = 0; i < column.length - 1; i++)if (column[i] === column[i + 1]) {\n                        column[i] *= 2;\n                        column[i + 1] = 0;\n                        this.score += column[i];\n                    }\n                    column = this.filterZero(column);\n                    while(column.length < 4)column.push(0);\n                    column.reverse();\n                    for(var row1 = 0; row1 < 4; row1++)this.board[row1][col] = column[row1];\n                }\n                this.renderBoard();\n                var nextBoard = JSON.stringify(this.getState());\n                if (this.currentBoard !== nextBoard) this.spawnNumber();\n                this.checkGameStatus();\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                var messageContainer = document.querySelector(\".message-container\");\n                var visibleMessage = messageContainer.querySelector(\"p:not(.hidden)\");\n                if (visibleMessage) {\n                    var mesClass = visibleMessage.classList;\n                    switch(mesClass){\n                        case \"message message-start\":\n                            return \"idle\";\n                        case \"message message-win\":\n                            return \"win\";\n                        case \"message message-lose\":\n                            return \"lose\";\n                    }\n                } else return \"playing\";\n            }\n        },\n        {\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                var curStatus = this.isGameOver();\n                if (curStatus === \"win\" || curStatus === \"lose\") this.showMessage(curStatus);\n            }\n        },\n        {\n            key: \"showMessage\",\n            value: function showMessage(type) {\n                var message = document.querySelector(\".message.message-\".concat(type));\n                message.classList.remove(\"hidden\");\n                document.removeEventListener(\"keydown\", this.boundKeyDown);\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                var _this = this;\n                var cells = document.querySelectorAll(\".game-field td\");\n                var cellIndexes = Array.from({\n                    length: cells.length\n                }, function(_, i) {\n                    return i;\n                });\n                var shuffledIndexes = cellIndexes.sort(function() {\n                    return 0.5 - Math.random();\n                });\n                var chosenIndexes = shuffledIndexes.slice(0, 2);\n                chosenIndexes.forEach(function(index) {\n                    cells[index].textContent = \"2\";\n                    cells[index].classList.add(\"field-cell--2\");\n                    var rowIndex = Math.floor(index / 4);\n                    var colIndex = index % 4;\n                    _this.board[rowIndex][colIndex] = 2;\n                });\n                var footerMessage = document.querySelector(\".message.message-start\");\n                footerMessage.classList.add(\"hidden\");\n                this.boundKeyDown = this.keyDown.bind(this);\n                document.addEventListener(\"keydown\", this.boundKeyDown);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                var cells = document.querySelectorAll(\".game-field td\");\n                cells.forEach(function(cell) {\n                    cell.classList = \"field-cell\";\n                    cell.textContent = \"\";\n                });\n                for(var row = 0; row < 4; row++)for(var column = 0; column < 4; column++)this.board[row][column] = 0;\n                var footerMessage = document.querySelector(\".message.message-start\");\n                footerMessage.classList.remove(\"hidden\");\n                document.removeEventListener(\"keydown\", this.boundKeyDown);\n            }\n        },\n        {\n            key: \"keyDown\",\n            value: function keyDown(e) {\n                e.preventDefault();\n                switch(e.key){\n                    case \"ArrowUp\":\n                        this.moveUp();\n                        break;\n                    case \"ArrowDown\":\n                        this.moveDown();\n                        break;\n                    case \"ArrowLeft\":\n                        this.moveLeft();\n                        break;\n                    case \"ArrowRight\":\n                        this.moveRight();\n                        break;\n                }\n                this.checkGameStatus();\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// start / restart\nvar $197cd56b15c33885$var$startButton = document.querySelector(\"button.start\");\nvar $197cd56b15c33885$var$switcher = 0;\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function(ev) {\n    $197cd56b15c33885$var$switcher++;\n    if ($197cd56b15c33885$var$switcher % 2 === 1) {\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$game.start();\n    } else {\n        $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n        $197cd56b15c33885$var$startButton.classList.add(\"start\");\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n        $197cd56b15c33885$var$game.restart();\n    }\n});\n\n})();\n//# sourceMappingURL=index.1c32688a.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// start / restart\nconst startButton = document.querySelector('button.start');\nlet switcher = 0;\n\nstartButton.addEventListener('click', (ev) => {\n  switcher++;\n\n  if (switcher % 2 === 1) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n    game.start();\n  } else {\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    startButton.textContent = 'Start';\n    game.restart();\n  }\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n  }\n\n  filterZero(row) {\n    return row.filter((num) => num !== 0);\n  }\n\n  renderBoard() {\n    const cells = document.querySelectorAll('.game-field td');\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const index = row * 4 + col;\n        const cell = cells[index];\n        const value = this.board[row][col];\n\n        cell.classList = 'field-cell';\n\n        if (value === 0) {\n          cell.textContent = '';\n        } else {\n          cell.textContent = value;\n          cell.classList.add(`field-cell--${value}`);\n        }\n      }\n    }\n\n    const scoreNumber = document.querySelector('.game-score');\n\n    scoreNumber.textContent = `${this.score}`;\n  }\n\n  spawnNumber() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    const numberToSpawn = Math.random() < 0.1 ? 4 : 2;\n\n    this.board[randCell.row][randCell.col] = numberToSpawn;\n    this.renderBoard();\n  }\n\n  isGameOver() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 2048) {\n          return 'win';\n        }\n      }\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          return 'playing';\n        }\n\n        if (col < 3 && this.board[row][col] === this.board[row][col + 1]) {\n          return 'playing';\n        }\n\n        if (row < 3 && this.board[row][col] === this.board[row + 1][col]) {\n          return 'playing';\n        }\n      }\n    }\n\n    return 'lose';\n  }\n\n  moveLeft() {\n    for (let i = 0; i < 4; i++) {\n      let row = this.board[i];\n\n      row = this.filterZero(row);\n\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] === row[j + 1]) {\n          row[j] *= 2;\n          row[j + 1] = 0;\n          this.score += row[j];\n        }\n      }\n      row = this.filterZero(row);\n\n      while (row.length < 4) {\n        row.push(0);\n      }\n      this.board[i] = row;\n    }\n    this.renderBoard();\n    this.spawnNumber();\n    this.checkGameStatus();\n  }\n\n  moveRight() {\n    for (let i = 0; i < 4; i++) {\n      let row = this.board[i].reverse();\n\n      row = this.filterZero(row);\n\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] === row[j + 1]) {\n          row[j] *= 2;\n          row[j + 1] = 0;\n          this.score += row[j];\n        }\n      }\n      row = this.filterZero(row);\n\n      while (row.length < 4) {\n        row.push(0);\n      }\n      this.board[i] = row.reverse();\n    }\n    this.renderBoard();\n    this.spawnNumber();\n    this.checkGameStatus();\n  }\n\n  moveUp() {\n    for (let col = 0; col < 4; col++) {\n      let column = [];\n\n      for (let row = 0; row < 4; row++) {\n        column.push(this.board[row][col]);\n      }\n      column = this.filterZero(column);\n\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          column[i + 1] = 0;\n          this.score += column[i];\n        }\n      }\n      column = this.filterZero(column);\n\n      while (column.length < 4) {\n        column.push(0);\n      }\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = column[row];\n      }\n    }\n    this.renderBoard();\n    this.spawnNumber();\n    this.checkGameStatus();\n  }\n\n  moveDown() {\n    for (let col = 0; col < 4; col++) {\n      let column = [];\n\n      for (let row = 0; row < 4; row++) {\n        column.push(this.board[row][col]);\n      }\n      column = this.filterZero(column);\n      column.reverse();\n\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          column[i + 1] = 0;\n          this.score += column[i];\n        }\n      }\n      column = this.filterZero(column);\n\n      while (column.length < 4) {\n        column.push(0);\n      }\n      column.reverse();\n\n      for (let row = 0; row < 4; row++) {\n        this.board[row][col] = column[row];\n      }\n    }\n    this.renderBoard();\n\n    const nextBoard = JSON.stringify(this.getState());\n\n    if (this.currentBoard !== nextBoard) {\n      this.spawnNumber();\n    }\n    this.checkGameStatus();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    const messageContainer = document.querySelector('.message-container');\n    const visibleMessage = messageContainer.querySelector('p:not(.hidden)');\n\n    if (visibleMessage) {\n      const mesClass = visibleMessage.classList;\n\n      switch (mesClass) {\n        case 'message message-start':\n          return 'idle';\n        case 'message message-win':\n          return 'win';\n        case 'message message-lose':\n          return 'lose';\n      }\n    } else {\n      return `playing`;\n    }\n  }\n\n  checkGameStatus() {\n    const curStatus = this.isGameOver();\n\n    if (curStatus === 'win' || curStatus === 'lose') {\n      this.showMessage(curStatus);\n    }\n  }\n\n  showMessage(type) {\n    const message = document.querySelector(`.message.message-${type}`);\n\n    message.classList.remove('hidden');\n    document.removeEventListener('keydown', this.boundKeyDown);\n  }\n\n  start() {\n    const cells = document.querySelectorAll('.game-field td');\n    const cellIndexes = Array.from({ length: cells.length }, (_, i) => i);\n    const shuffledIndexes = cellIndexes.sort(() => 0.5 - Math.random());\n    const chosenIndexes = shuffledIndexes.slice(0, 2);\n\n    chosenIndexes.forEach((index) => {\n      cells[index].textContent = '2';\n      cells[index].classList.add('field-cell--2');\n\n      const rowIndex = Math.floor(index / 4);\n      const colIndex = index % 4;\n\n      this.board[rowIndex][colIndex] = 2;\n    });\n\n    const footerMessage = document.querySelector('.message.message-start');\n\n    footerMessage.classList.add('hidden');\n    this.boundKeyDown = this.keyDown.bind(this);\n    document.addEventListener('keydown', this.boundKeyDown);\n  }\n\n  restart() {\n    const cells = document.querySelectorAll('.game-field td');\n\n    cells.forEach((cell) => {\n      cell.classList = 'field-cell';\n      cell.textContent = '';\n    });\n\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        this.board[row][column] = 0;\n      }\n    }\n\n    const footerMessage = document.querySelector('.message.message-start');\n\n    footerMessage.classList.remove('hidden');\n    document.removeEventListener('keydown', this.boundKeyDown);\n  }\n\n  keyDown(e) {\n    e.preventDefault();\n\n    switch (e.key) {\n      case 'ArrowUp':\n        this.moveUp();\n        break;\n      case 'ArrowDown':\n        this.moveDown();\n        break;\n      case 'ArrowLeft':\n        this.moveLeft();\n        break;\n      case 'ArrowRight':\n        this.moveRight();\n        break;\n    }\n    this.checkGameStatus();\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$197cd56b15c33885$var$game","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$switcher","protoProps","Game","initialState","arguments","length","instance","Constructor","TypeError","board","score","key","value","row","filter","num","cells","document","querySelectorAll","col","cell","classList","textContent","add","concat","scoreNumber","querySelector","emptyCells","push","randCell","Math","floor","random","numberToSpawn","renderBoard","row1","col1","i","filterZero","j","spawnNumber","checkGameStatus","reverse","column","nextBoard","JSON","stringify","getState","currentBoard","visibleMessage","messageContainer","curStatus","isGameOver","showMessage","type","message","remove","removeEventListener","boundKeyDown","_this","chosenIndexes","shuffledIndexes","cellIndexes","Array","from","_","sort","slice","forEach","index","rowIndex","footerMessage","keyDown","bind","addEventListener","e","preventDefault","moveUp","moveDown","moveLeft","moveRight","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","ev","start","restart"],"version":3,"file":"index.1c32688a.js.map"}